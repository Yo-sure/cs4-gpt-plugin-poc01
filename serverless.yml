service: cs4-gpt-plugin-poc01
app: app-gpt-plugin-v1

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-northeast-2
  environment:
    QUOTE_TABLE_NAME: cs4-gpt-plugin-poc01-quote
    TARIFF_TABLE_NAME: cs4-gpt-plugin-poc01-tariff
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/cs4-gpt-plugin-poc01-quote"
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
          Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cs4-gpt-plugin-poc01-dev-get-quote"

plugins:
  - serverless-offline
  - serverless-cloudfront-invalidate
  - serverless-openapi-documentation

custom:
  documentation: ${file(serverless.doc.yml):documentation}
  cloudfrontInvalidate:
    - distributionIdKey: "CloudFrontDistributionId"
      items:
        - "/.well-known/ai-plugin.json"
        - "/api-spec/openapi.yml"


functions:
  get-quote:
    handler: src/quote.handler
    events:
      - http:
          path: quote
          method: post
          cors: true
    role: !Sub "arn:aws:iam::${AWS::AccountId}:role/cs4-gpt-plugin-poc01-dev-ap-northeast-2-lambdaGetQuoteRole"

  gpt-interface:
    handler: src/gptInterface.handler
    events:
      - http:
          path: gpt-interface
          method: post
          cors: true
          documentation: ${file(serverless.doc.yml):endpoints.gpt-interface}

resources:
  Resources:
    CS4GPTPluginBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: cs4-gpt-plugin-bucket
    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref CS4GPTPluginBucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                CanonicalUser: !GetAtt CloudFrontOAI.S3CanonicalUserId
              Action: s3:GetObject
              Resource: !Sub "arn:aws:s3:::${CS4GPTPluginBucket}/*"
    CloudFrontOAI:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: OAI for cs4-gpt-plugin-bucket
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          Origins:
            - DomainName: !GetAtt
                - CS4GPTPluginBucket
                - DomainName
              Id: S3Origin
              S3OriginConfig:
                OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOAI}
          DefaultRootObject: index.html
          DefaultCacheBehavior:
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: all
  Outputs:
    BucketName:
      Description: The name of the S3 bucket
      Value: !Ref CS4GPTPluginBucket
    CloudFrontDistributionId:
      Description: The ID of the CloudFront distribution
      Value: !Ref CloudFrontDistribution
